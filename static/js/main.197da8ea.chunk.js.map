{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","Styles","status","items","positive","max","value","FeedbackOptions","options","onLeaveFeedback","map","option","feedbackBtn","type","name","onClick","Section","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","event","target","setState","prevState","this","objKey","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,wBAAwB,MAAQ,0BAA0B,SAAW,+B,qBCAvMD,EAAOC,QAAU,CAAC,YAAc,uC,gBCAhCD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,+LC8BbC,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,sBAAKC,UAAWC,IAAOC,OAAvB,UACE,oBAAGF,UAAWC,IAAON,KAArB,mBAAkCA,KAClC,oBAAGK,UAAWC,IAAOL,QAArB,sBAAwCA,KACxC,oBAAGI,UAAWC,IAAOJ,IAArB,kBAAgCA,QAElC,oBAAGG,UAAWC,IAAOE,MAArB,oBAAoCL,KACpC,oBAAGE,UAAWC,IAAOG,SAArB,gCACsBL,EADtB,IAEE,2BAAUM,IAAI,MAAMC,MAAOP,EAA3B,gCACsBA,EADtB,e,gBCUOQ,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEX,UAAWC,IAAOW,YAClBC,KAAK,SACLC,KAAMH,EACNI,QAASN,EAJX,SAMGE,U,gBCEIK,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIlB,UAAWC,IAAOgB,MAAtB,SAA8BA,IAC7BC,M,iBCMQC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGpB,UAAWC,IAAOmB,QAArB,SAA+BA,OCChBC,E,4MACnBC,MAAQ,CACN3B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP0B,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAEpC,OAHyB,EACjB3B,KADiB,EACXC,QADW,EACFC,K,EAKzB2B,gCAAkC,WAChC,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKJ,MAAd3B,KAC0B8B,EAClC,OAAOE,KAAKC,MAAMF,I,EAGpBjB,gBAAkB,SAACoB,GACjB,IAAMf,EAAOe,EAAMC,OAAOhB,KAC1B,EAAKiB,UAAS,SAACC,GAAD,sBACXlB,EAAOkB,EAAUlB,GAAQ,O,uDAGpB,IAAD,EACwBmB,KAAKX,MAA5B3B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQmC,KAAKV,qBACbxB,EAAqBkC,KAAKT,kCAE1BU,EAASC,OAAOC,KAAKH,KAAKX,OAChC,OACE,qCACE,eAAC,EAAD,CAASL,MAAM,wBAAf,UACE,cAAC,EAAD,CACET,QAAS0B,EACTzB,gBAAiBwB,KAAKxB,kBACrB,OAEM,IAAVX,EACC,cAAC,EAAD,CAAcsB,QAAQ,sBAEtB,eAAC,EAAD,CAASH,MAAM,aAAf,UACE,cAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IACnB,OAEJ,W,GApDsBsC,aCHjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.197da8ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Statistics_status__PaLnS\",\"good\":\"Statistics_good__4CEV-\",\"neutral\":\"Statistics_neutral__2atWV\",\"bad\":\"Statistics_bad__wxESd\",\"items\":\"Statistics_items__1wV4n\",\"positive\":\"Statistics_positive__2KO0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__1Ssns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__jxxRu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__XcNut\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <div className={Styles.status}>\r\n        <p className={Styles.good}>Good: {good}</p>\r\n        <p className={Styles.neutral}>Neutral: {neutral}</p>\r\n        <p className={Styles.bad}>Bad: {bad}</p>\r\n      </div>\r\n      <p className={Styles.items}>Total: {total}</p>\r\n      <p className={Styles.positive}>\r\n        Positive feedback: {positivePercentage}%\r\n        <progress max=\"100\" value={positivePercentage}>\r\n          Positive feedback: {positivePercentage} %\r\n        </progress>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <button\r\n          className={Styles.feedbackBtn}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className={Styles.title}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className={Styles.message}>{message}</p>\r\n    </>\r\n  );\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    return result;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n\n  onLeaveFeedback = (event) => {\n    const name = event.target.name;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    const objKey = Object.keys(this.state);\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={objKey}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />{\" \"}\n        </Section>\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />{\" \"}\n          </Section>\n        )}{\" \"}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}